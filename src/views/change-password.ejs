<!doctype html>
<html lang="ko">

<head>
    <%- include('../views/partials/head'); %>
        <link rel="stylesheet" href="/css/header.css" />
        <link rel="stylesheet" href="/css/change-password.css" />
        <link rel="stylesheet" href="/css/footer.css" />
</head>

<body class="container">
    <header class="header"><%- include('../views/partials/header'); %></header>

    <main role="main" class="contents">
        <div class="contents-inner">
            <div class="change-password-wrap">
                <section class="aside-section-wrap">
                    <div id="snb" class="snb_my">
                        <h2 class="tit_snb">마이페이지</h2>
                        <div class="inner_sub">
                            <ul class="list_menu">
                                <li class="on">
                                    <a href="/order/<%= userInfo.userId %>/orderList">
                                        주문 내역
                                    </a>
                                </li>
                                <li>
                                    <a href="/users/info">개인 정보 수정</a>
                                </li>
                                <li>
                                    <a href="/users/info/edit/pw">비밀번호 변경</a>
                                </li>
                                <li>
                                    <a href="/users/info/delete">회원 탈퇴 하기</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </section>
                <div class="change-password">
                    <div class="change-password-text">
                        <div class="left">비밀번호 변경</div>
                        <div class="right">
                            필수입력
                            <div>*</div>
                        </div>
                    </div>
                    <div class="top">
                        <div class="password">
                            <label>현재 비밀번호
                                <div>*</div>
                            </label>
                            <input type="password" id="passwordInput" placeholder="비밀번호를 입력해주세요"
                                onchange="validatePassword()" />
                            <div class="password-check" id="passwordCheckBtn">
                                <button href="#" onclick="checkPasswordDuplicate()">
                                    비밀번호확인
                                </button>
                            </div>
                        </div>
                        <p id="passwordCheck"></p>

                        <div class="new-password">
                            <label>새 비밀번호</label>
                            <input type="password" id="newPasswordInput" placeholder="새 비밀번호를 입력해주세요"
                                onchange="validateNewPassword()" />
                            <span><a href="#">중복확인</a></span>
                        </div>
                        <p id="newPasswordCheck"></p>

                        <div class="password-confirm">
                            <label>새 비밀번호 확인</label>
                            <input type="password" id="passwordInputConfirm" placeholder="비밀번호를 한번 더 입력해주세요"
                                onchange="validatePasswordConfirm()" />
                            <span><a href="#">중복확인</a></span>
                        </div>
                        <p id="pwConfirmCheck"></p>
                    </div>
                    <div class="btn-bottom">
                        <div class="btn-change-password" id="changePassword">
                            <button href="#" onclick="validateCondition()">비밀번호변경</button>
                        </div>
                        <a href="/users/info" class="btn-secede">취소하기</a>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <footer class="footer"><%- include('../views/partials/footer'); %></footer>

    <script>
        // 비밀번호 유효성 검사
        async function validatePassword() {
            const $passwordInput = document.querySelector('#passwordInput');
            const $passwordCheck = document.querySelector('#passwordCheck');
            const $passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^+=-])(?=.*[0-9]).{8,15}$/;

            if ($passwordInput.value.match($passwordRegex)) {
                $passwordCheck.style.fontSize = '12px';
                $passwordCheck.textContent = '';
                $passwordCheck.style.color = 'blue';
                return true;
            } else {
                $passwordCheck.style.fontSize = '12px';
                $passwordCheck.textContent =
                    '영문, 숫자, 특수기호 조합 8~15자리 이하로 입력해주세요.';
                $passwordCheck.style.color = 'red';
                return false;
            }
        }

        async function checkPasswordDuplicate() {
            const $passwordInput = document.querySelector('#passwordInput');
            const $passwordCheck = document.querySelector('#passwordCheck');
            const password = $passwordInput.value;

            try {
                const res = await fetch('/api/users/info/edit/pwCheck', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ password }),
                });

                if (res.ok) {
                    const result = await res.json();
                    if (result.message === '비밀번호가 일치하지 않습니다') {
                        $passwordCheck.style.fontSize = '12px';
                        $passwordCheck.textContent = '비밀번호가 일치하지 않습니다.';
                        $passwordCheck.style.color = 'red';
                        return true;
                    } else {
                        $passwordCheck.style.fontSize = '12px';
                        $passwordCheck.textContent = '비밀번호가 확인되었습니다.';
                        $passwordCheck.style.color = 'blue';
                        enablePasswordUpButton();
                        return false;
                    }
                } else {
                    alert('비밀번호가 일치하지 않습니다.')
                    return false;
                }
            } catch (error) {
                console.error('서버와의 통신 중 오류가 발생했습니다.', error);
                return false;
            }
        }

        // 회원가입 버튼 활성화 함수
        function enablePasswordUpButton() {
            const $passwordButton = document.querySelector('#changePassword');
            $passwordButton.disabled = false;
        }

        function validateNewPassword() {
            const $newPasswordInput = document.querySelector('#newPasswordInput');
            const $newPasswordCheck = document.querySelector('#newPasswordCheck');
            const $passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^+=-])(?=.*[0-9]).{8,15}$/;

            if ($newPasswordInput.value.match($passwordRegex)) {
                $newPasswordCheck.style.fontSize = '12px';
                $newPasswordCheck.textContent = '안전한 비밀번호입니다.';
                $newPasswordCheck.style.color = 'blue';
                return true;
            } else {
                $newPasswordCheck.style.fontSize = '12px';
                $newPasswordCheck.textContent =
                    '영문, 숫자, 특수기호 조합 8~15자리 이하로 입력해주세요.';
                $newPasswordCheck.style.color = 'red';
                return false;
            }
        }

        // 비밀번호 재확인 검사
        function validatePasswordConfirm() {
            const $passwordInputConfirm = document.querySelector('#passwordInputConfirm');
            const $newPasswordInput = document.querySelector('#newPasswordInput');
            const $pwConfirmCheck = document.querySelector('#pwConfirmCheck');

            if ($passwordInputConfirm.value === $newPasswordInput.value) {
                $pwConfirmCheck.style.fontSize = '12px';
                $pwConfirmCheck.textContent = '비밀번호가 일치합니다.';
                $pwConfirmCheck.style.color = 'blue';
                return true;
            } else {
                $pwConfirmCheck.style.fontSize = '12px';
                $pwConfirmCheck.textContent = '비밀번호가 일치하지 않습니다.';
                $pwConfirmCheck.style.color = 'red';
                return false;
            }
        }

        // 비밀번호 조건 검사
        async function validateCondition() {
            const isPasswordValid = await validatePassword();
            console.log(isPasswordValid);
            const isNewPasswordValid = validateNewPassword();
            console.log(isNewPasswordValid);
            const isPasswordConfirmValid = validatePasswordConfirm();
            console.log(isPasswordConfirmValid);
            const isPasswordDuplicateValid = await checkPasswordDuplicate();
            console.log(isPasswordDuplicateValid);

            if (
                isPasswordValid &&
                isNewPasswordValid &&
                isPasswordConfirmValid &&
                !isPasswordDuplicateValid
            ) {
                changePassword();
            } else {
                console.error('비밀번호 변경조건을 만족하지 못했습니다.');
            }
        }

        async function changePassword() {
            const $passwordInput = document.querySelector('#passwordInput').value;
            const $newPasswordInput = document.querySelector('#newPasswordInput').value;

            const userData = {
                password: $passwordInput,
                newPassword: $newPasswordInput,
            };

            const isDuplicate = await checkPasswordDuplicate();
            if (isDuplicate) {
                console.error('비밀번호가 일치하지 않습니다.');
                return;
            }

            try {
                const res = await fetch('/api/users/info/edit/pw', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(userData),
                });

                if (res.ok) {
                    window.location.href = '/users/info';
                } else {
                    console.error('비밀번호 변경에 실패했습니다.');
                }
            } catch (error) {
                console.error('서버와의 통신 중 오류가 발생했습니다.', error);
            }
        }
    </script>
</body>

</html>